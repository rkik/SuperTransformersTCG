--------------------------------------------------------------------------------
-- Created by Rkik 13 Oct 2018 for Transformers TCG
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- On Load
--------------------------------------------------------------------------------
function onLoad()
  -- In case the mod was just loaded, start as Blue so the menu is right side up.
  Player.White.changeColor('Blue')

  TRANSFORMERS_TCG_VERSION = "0.0.3"

  -- Blue GUI IDs
  blueBoardguid = 'd67403'
  blueMatZoneguid = 'c57486'
  blueFlipZoneguid = '5caf00'

  -- Red GUI IDs
  redBoardguid = '401f2a'
  redMatZoneguid = '349950'
  redFlipZoneguid = '4eeb2d'

  -- Objects
  blueBoard = nil
  blueMatZone = nil
  blueFlipZone = nil
  redBoard = nil
  redMatZone = nil
  redFlipZone = nil

  areBoardsZonesEnabled   = true
  bluePanelMaximized      = true
  redPanelMaximized       = true
  blueHandCount           = 0
  redHandCount            = 0

  startLuaCoroutine(self, 'modernSetupCoroutine')

  -- Start a repeating function to check things.
  Wait.time(periodicStatusUpdate, 0.5)

  -- Use a small startup delay that blocks things from spawning.
  loadDelayFinished        = false
  Wait.time(function() loadDelayFinished = true end, 1.0)
  setBoardZoneEnabled(areBoardsZonesEnabled)

  printToAll("===========================================", {1,1,1})
  printToAll("Transformers TCG version " .. TRANSFORMERS_TCG_VERSION, {1,1,1})
  printToAll("", {1,1,1})
  printToAll("Type \"!help\" in chat for a command list.", {1,1,1})
  printToAll("===========================================", {1,1,1})
end


--------------------------------------------------------------------------------
-- Setup Co-routine
--------------------------------------------------------------------------------
function modernSetupCoroutine()
  local obj_parameters = {}

  HandSetup()

  blueFlipZone = getObjectFromGUID(blueFlipZoneguid)
  blueMatZone = getObjectFromGUID(blueMatZoneguid)
  blueBoard = getObjectFromGUID(blueBoardguid)
  blueBoard.setName('Blue')
  blueBoard.setLuaScript(playerPlaymatScript)
  blueBoard.interactable = false

  redFlipZone = getObjectFromGUID(redFlipZoneguid)
  redMatZone = getObjectFromGUID(redMatZoneguid)
  redBoard = getObjectFromGUID(redBoardguid)
  redBoard.setName('Red')
  redBoard.setLuaScript(playerPlaymatScript)
  redBoard.interactable = false

  coroutine.yield(0)
  coroutine.yield(0)
  return 1
end


--------------------------------------------------------------------------------
-- Periodic Update - The onUpdate event is called once per frame
--------------------------------------------------------------------------------
function onUpdate()
end


--------------------------------------------------------------------------------
-- Object Drop
--------------------------------------------------------------------------------
function onObjectDrop(playerColor, dropObject)
  if (dropObject.tag == "Card") then
    dropObject.setVar("curLiftingPlayer", nil)

    -- If the card was already in a spawning zone, handle spawning the GUI.  This also handles updating the GUI position.
    if (dropObject.getVar("curMatZone") == "Blue") then
      blueBoard.call('handleBotSpawn', {cardObject=dropObject})
    elseif (dropObject.getVar("curMatZone") == "Red") then
      redBoard.call('handleBotSpawn', {cardObject=dropObject})
    else
      -- Nothing needs done.
    end
  end
end


--------------------------------------------------------------------------------
-- Object Pick Up
--------------------------------------------------------------------------------
function onObjectPickUp(playerColor, pickUpObject)
  if (pickUpObject.tag == "Card") then
    pickUpObject.setVar("curLiftingPlayer", playerColor)
  end
end


--------------------------------------------------------------------------------
-- Object Enter Zone
--------------------------------------------------------------------------------
function onObjectEnterScriptingZone(zone, enterObject)
  local zoneObjects = nil
  local spawnBluePerspective = false
  local spawnRedPerspective = false
  local objectY = enterObject.getPosition().y
  local rotationZ = enterObject.getRotation().z

  -- Only check cards.
  if (enterObject.tag == "Card") then
    -- Check if the zone should spawn dice.
    if (zone == blueMatZone) then
      enterObject.setVar("curMatZone", "Blue")
      spawnBluePerspective = true
    elseif (zone == redMatZone) then
      enterObject.setVar("curMatZone", "Red")
      spawnRedPerspective = true
    end

    -- Only check for spawning here if no one is currently lifting the card.
    if (spawnBluePerspective == true) then
      if (enterObject.getVar("curLiftingPlayer") == nil) then
        blueBoard.call('handleBotSpawn', {cardObject=enterObject})
      end
    elseif (spawnRedPerspective == true) then
      if (enterObject.getVar("curLiftingPlayer") == nil) then
        redBoard.call('handleBotSpawn', {cardObject=enterObject})
      end
    else
      -- Nothing needs done.
    end
  end
end


--------------------------------------------------------------------------------
-- Object Leave Zone
--------------------------------------------------------------------------------
function onObjectLeaveScriptingZone(zone, leaveObject)
  -- Only check cards.
  if (leaveObject.tag == "Card") then
    -- Check if the card is leaving a mat zone.
    if ((zone == blueMatZone) or (zone == redMatZone)) then
      leaveObject.setVar("curMatZone", nil)

      -- Hide the GUI when the card leaves a mat zone.
      local linkedGUIHolder = leaveObject.getVar("linkedGUIHolder")
      if (linkedGUIHolder != nil) then
        linkedGUIHolder.UI.setAttribute("card_gui", "active", false)
        linkedGUIHolder.UI.setAttribute("opponent_card_gui", "active", false)
      end
    end
  end
end


--------------------------------------------------------------------------------
-- Object Destroy
--------------------------------------------------------------------------------
function onObjectDestroy(destroyObject)
  -- Only check cards.
  if (destroyObject.tag == "Card") then
    local linkedGUIHolder = destroyObject.getVar("linkedGUIHolder")

    -- Destruct the GUI holder.
    if (linkedGUIHolder != nil) then
      linkedGUIHolder.destruct()
    end
  end
end


--------------------------------------------------------------------------------
-- Hand Setup Options
--------------------------------------------------------------------------------
function HandSetup()
  -- Adjust the red and blue hand zones to be usable.
  local handTransform = Player["Red"].getHandTransform()
  handTransform.position.x = -1.70
  handTransform.position.y = 4.60
  handTransform.position.z = (-20.00)
  handTransform.rotation.x = 0.00
  handTransform.rotation.y = 0.00
  handTransform.rotation.z = 0.00
  handTransform.scale.x = 20.00
  handTransform.scale.y = 5.65
  handTransform.scale.z = 3.00
  Player["Red"].setHandTransform(handTransform)
  handTransform = Player["Blue"].getHandTransform()
  handTransform.position.x = 1.70
  handTransform.position.y = 4.60
  handTransform.position.z = 20.00
  handTransform.rotation.x = 0.00
  handTransform.rotation.y = 180.00
  handTransform.rotation.z = 0.00
  handTransform.scale.x = 20.00
  handTransform.scale.y = 5.65
  handTransform.scale.z = 3.00
  Player["Blue"].setHandTransform(handTransform)
end


--------------------------------------------------------------------------------
-- Hand Check
--------------------------------------------------------------------------------
function periodicStatusUpdate()
  -- Use a coroutine to avoid synchronization problems.
  startLuaCoroutine(self, "periodicStatusUpdateCoroutine")

  Wait.time(periodicStatusUpdate, 0.5)
end


--------------------------------------------------------------------------------
-- Hand Check Coroutine
--------------------------------------------------------------------------------
function periodicStatusUpdateCoroutine()
  -- Scan for cards.
  if Player["blue"] != nil then
    blueHandCount = #(Player["blue"].getHandObjects())
  end

  if Player["red"] != nil then
    redHandCount = #(Player["red"].getHandObjects())
  end

  blueBoard.call('handleCardFlip', {cardObject=dropObject, zone=blueFlipZone})
  redBoard.call('handleCardFlip', {cardObject=dropObject, zone=redFlipZone})

  -- Update UI elements.
  --UI.setAttribute("blue_panel_blue_cards", "text", blueHandCount)
  --UI.setAttribute("blue_panel_red_cards", "text", redHandCount)

  --UI.setAttribute("red_panel_blue_cards", "text", blueHandCount)
  --UI.setAttribute("red_panel_red_cards", "text", redHandCount)

  if blueBoard != nil then
    --blueBoard.UI.setAttribute("blue_panel_blue_cards", "text", blueHandCount)
    --blueBoard.UI.setAttribute("blue_panel_red_cards", "text", redHandCount)
  end

  if redBoard != nil then
    --redBoard.UI.setAttribute("red_panel_blue_cards", "text", blueHandCount)
    --redBoard.UI.setAttribute("red_panel_red_cards", "text", redHandCount)
  end

  return 1
end


--------------------------------------------------------------------------------
-- Board Zone Enable
--------------------------------------------------------------------------------
function setBoardZoneEnabled(boardZoneEnabled)
  if boardZoneEnabled == true then
    -- Move zone above table to enable
    redMatZone.setPosition({-4.00, 1.00, -9.00})
    blueMatZone.setPosition({4.00, 1.00, 9.00})
  else
    -- Move zone below table to disable
    redMatZone.setPosition({-4.00, -2.00, -9.00})
    blueMatZone.setPosition({4.00, -2.00, 9.00})
  end
end


--------------------------------------------------------------------------------
-- Bot Search
--------------------------------------------------------------------------------
function searchCardInBotsList(params)
  local cardname = params[1]
  local databank = Global.getTable("botsTable")
  for i in ipairs(databank) do
    if databank[i]["name"] == cardname then
      return i
    end
  end
  return false
end


--------------------------------------------------------------------------------
-- Battlecard Search
--------------------------------------------------------------------------------
function getStatsFromBattleCardsList(params)
  local cardname = params[1]
  local databank = Global.getTable("battleCardsTable")
  for i in ipairs(databank) do
    if databank[i]["name"] == cardname then
      return {attack = databank[i]["attack"],
              defense = databank[i]["defense"],
              special = databank[i]["special"]}
    end
  end
  return false
end

--------------------------------------------------------------------------------
-- Chat Options
--------------------------------------------------------------------------------
function onChat(message, chatPlayer)
  if string.sub(message, 1, 5) == "!help" then
    -- Note that the chat font is not necessarily fixed-width, so alignment is done manually.
    printToColor("", chatPlayer.color, {1,1,1})
    printToColor("Chat commands:", chatPlayer.color, {1,1,1})
    printToColor("==================", chatPlayer.color, {1,1,1})
    printToColor("!help                      Print this message", chatPlayer.color, {1,1,1})
    printToColor("", chatPlayer.color, {1,1,1})
    printToColor("!disableBotGUI   Disables spawning of bot GUI", chatPlayer.color, {1,1,1})
    printToColor("!enableBotGUI    Enables spawning of bot GUI", chatPlayer.color, {1,1,1})
    printToColor("", chatPlayer.color, {1,1,1})
  elseif message == "!disableBotGUI" then
    areBoardsZonesEnabled = false
    setBoardZoneEnabled(areBoardsZonesEnabled)
    printToAll("Bot GUI disabled.", {0,0.8,0})
  elseif message == "!enableBotGUI" then
    areBoardsZonesEnabled = true
    setBoardZoneEnabled(areBoardsZonesEnabled)
    printToAll("Bot GUI enabled.", {0,0.8,0})
  else
    -- Nothing needs done.
  end
end


--------------------------------------------------------------------------------
-- Player Board functions
--------------------------------------------------------------------------------
playerPlaymatScript = [=[
function onload()
  local resourceAssets = {
    {
      name = "ingame_gui_background",
      url = "http://cloud-3.steamusercontent.com/ugc/948454725666385380/A47369F346253BDE02F44153C4940D47AA0E6E67/"
    },
    {
      name = "ingame_blue_panel_overlay",
      url = "http://cloud-3.steamusercontent.com/ugc/948454725666384731/E921F14A80CFA7C3BC20C7D7C61D7319443D0169/"
    },
    {
      name = "ingame_red_panel_overlay",
      url = "http://cloud-3.steamusercontent.com/ugc/948454725666389779/69DCF9BD43E89F93351F7F2F8E87D5CFFD7E3EF7/"
    }
  }
  self.UI.setCustomAssets(resourceAssets)

  tokenplayerone = Global.getTable('tokenplayerone')
  tokenplayertwo = Global.getTable('tokenplayertwo')

  if self.getName() == 'Blue' then
    owner = 'Blue'
  else
    owner = 'Red'
  end

  self.UI.setXml(Global.getVar("playmatGUIXMLScript"))
  Wait.time(finishInitPlaymatGUI, 0.2)
end

function onCollisionEnter(collision_info)
end

function onCollisionExit(collision_info)
end

--------------------------------------------------------------------------------
-- Bot GUI functions
--------------------------------------------------------------------------------
function handleBotSpawn(params)
  local position = self.getPosition()
  local object = params.cardObject
  local obj_parameters = {}
  local custom = {}
  obj_parameters.scale = {1.7,1.7,1.7}
  obj_parameters.position = {object.getPosition()[1],object.getPosition()[2]+1,object.getPosition()[3]}
  obj_parameters.rotation = {0,object.getRotation()[2]+180,0}

  if ((object.getVar("spawned") ~= true) and
      (object.tag == 'Card') and
      (Global.getVar("loadDelayFinished") == true)) then
    local isBotCard = false
    local cardDescription = object.getDescription()
    local cardDescriptionLength = 0
    local testCardType = nil

    if cardDescription == 'Bot' then
      isBotCard = true
      object.setVar("spawned", true)
    end

    -- For bot cards, create XML GUI
    if (isBotCard == true) then
      -- Since attaching the GUI directly to the card would cause the GUI to rotate when the card rotates, use a GUI holder object.
      obj_parameters.type = 'BlockSquare'
      obj_parameters.position = {object.getPosition()[1], 0.02, object.getPosition()[3]}
      if (owner == 'Blue') then
        obj_parameters.rotation = {0, 0, 0}
      else
        obj_parameters.rotation = {0, 180, 0}
      end
      obj_parameters.scale = {1, 1, 1}
      obj_parameters.sound = false
      -- Note that both the bot card and the GUI holder objects have scripts.
      obj_parameters.callback_function = function(newObject) initGUIHolder(object, newObject) end

      local cardGUIObject = spawnObject(obj_parameters)
    end
  else
    local linkedGUIHolder = object.getVar("linkedGUIHolder")

    -- If a GUI holder was linked and hidden, show it.
    if (linkedGUIHolder != nil) then
      -- Update the position.
      local cardPosition = object.getPosition()
      linkedGUIHolder.setPosition({x = cardPosition.x, y = 0.02, z = cardPosition.z})

      if (linkedGUIHolder.UI.getAttribute("card_gui", "active") == "False") then
        linkedGUIHolder.UI.setAttribute("card_gui", "active", true)
        linkedGUIHolder.UI.setAttribute("opponent_card_gui", "active", true)

        -- Update the visibility to match the prefab owner.
        if (owner == 'Blue') then
          linkedGUIHolder.setRotation({0, 0, 0})
        else
          linkedGUIHolder.setRotation({0, 180, 0})
        end
        linkedGUIHolder.UI.setAttribute("card_gui", "visibility", owner)
        if (owner == 'Blue') then
          linkedGUIHolder.UI.setAttribute("opponent_card_gui", "visibility", 'Red|Grey|Black')
        else
          linkedGUIHolder.UI.setAttribute("opponent_card_gui", "visibility", 'Blue|Grey|Black')
        end
      end
    end
  end
end

--------------------------------------------------------------------------------
-- Init Bot GUI
--------------------------------------------------------------------------------
function initGUIHolder(cardObject, holderObject)
  -- Set damage and damage values.
  -- TODO is there a way to save/load variables on objects like this?
  holderObject.setVar("damage", 0)
  holderObject.setVar("damage", 0)
  holderObject.setVar("owner", owner)

  holderObject.setLuaScript(Global.getVar("botGUILuaScript"))
  Wait.time(function() finishInitGUIHolder(cardObject, holderObject) end, 0.2)

  cardObject.setVar("linkedGUIHolder", holderObject)
end


--------------------------------------------------------------------------------
-- Finish Bot GUI Init
--------------------------------------------------------------------------------
function finishInitGUIHolder(cardObject, holderObject)
  holderObject.UI.setAttribute("card_gui", "visibility", owner)
  holderObject.UI.setAttribute("card_gui", "active", true)
  if (owner == 'Blue') then
    holderObject.UI.setAttribute("opponent_card_gui", "visibility", 'Red|Grey|Black')
  else
    holderObject.UI.setAttribute("opponent_card_gui", "visibility", 'Blue|Grey|Black')
  end
  holderObject.UI.setAttribute("opponent_card_gui", "active", true)
end


--------------------------------------------------------------------------------
-- Finish Playmat GUI Init
--------------------------------------------------------------------------------
function finishInitPlaymatGUI()
  self.UI.setAttribute("playmat_gui", "visibility", owner)
  self.UI.setAttribute("playmat_gui", "active", true)
  if (owner == 'Blue') then
    self.UI.setAttribute("opponent_playmat_gui", "visibility", 'Red|Grey|Black')
  else
    self.UI.setAttribute("opponent_playmat_gui", "visibility", 'Blue|Grey|Black')
  end
  self.UI.setAttribute("opponent_playmat_gui", "active", true)
end


--------------------------------------------------------------------------------
-- Handle card flip
--------------------------------------------------------------------------------
function handleCardFlip(params)
  local position = self.getPosition()
  local object = params.cardObject
  local zone = params.zone
  local flipAttack = 0
  local flipDefense = 0
  local flipSpecial = 0

  local zoneObjects = zone.getObjects()

  for k, obj in pairs(zoneObjects) do
    -- only look at cards
    if obj.tag == "Card" then
      -- Make sure they are face up and not being held
      cardRotation = obj.getRotation()
      if ((obj.getVar("curLiftingPlayer") == nil) and
          ((cardRotation.z > 340) or (cardRotation.z < 20))) then
        stats = Global.call("getStatsFromBattleCardsList", { obj.getName() })
        if stats ~= false then
          flipAttack = flipAttack + stats["attack"]
          flipDefense = flipDefense + stats["defense"]
          flipSpecial = flipSpecial + stats["special"]
        end
      end
    end
  end

  self.UI.setAttribute("attack", "text", flipAttack)
  self.UI.setAttribute("defense", "text", flipDefense)
  self.UI.setAttribute("special", "text", flipSpecial)
end


--------------------------------------------------------------------------------
-- Display GUI value
--------------------------------------------------------------------------------
function updateFlipGuiNumberValue(value, gui_element)
  local gui_element_underline = gui_element .. "_underline"

  self.UI.setAttribute(gui_element, "text", value)
  --self.UI.setAttribute("opponent_view_damage", "text", value)

  if ((value == 6) or (value == 9)) then
    self.UI.setAttribute(gui_element_underline, "text", "_")
    --self.UI.setAttribute("opponent_view_damage_underline", "text", "_")
  else
    self.UI.setAttribute(gui_element_underline, "text", "")
    --self.UI.setAttribute("opponent_view_damage_underline", "text", "")
  end
end
]=]
-- END playerPlaymatScript


playmatGUIXMLScript = [[
<Panel
   id="playmat_gui"
   active="false"
   position="0 0 -11"
   rotation="0 0 180"
   rectAlignment="MiddleCenter"
   width="128"
   height="128"
   raycastTarget="false"
>
<Text
   id="attack_underline"
   offsetXY="0 0"
   scale="1 1"
   fontStyle="Bold"
   fontSize="30"
   color="#FFFFFF"
></Text>
<Text
   id="attack"
   offsetXY="0 0"
   scale="1 1"
   fontStyle="Bold"
   fontSize="30"
   color="#FFFFFF"
>0</Text>
<Text
   id="defense_underline"
   offsetXY="0 -30"
   scale="1 1"
   fontStyle="Bold"
   fontSize="30"
   color="#FFFFFF"
></Text>
<Text
   id="defense"
   offsetXY="0 -30"
   scale="1 1"
   fontStyle="Bold"
   fontSize="30"
   color="#FFFFFF"
>0</Text>
<Text
   id="special_underline"
   offsetXY="0 -60"
   scale="1 1"
   fontStyle="Bold"
   fontSize="30"
   color="#FFFFFF"
></Text>
<Text
   id="special"
   offsetXY="0 -60"
   scale="1 1"
   fontStyle="Bold"
   fontSize="30"
   color="#FFFFFF"
>0</Text>
</Panel>

<Panel
   id="opponent_playmat_gui"
   active="false"
   position="0 0 0"
   rotation="0 0 180"
   rectAlignment="MiddleCenter"
   width="128"
   height="128"
   raycastTarget="false"
>
<Text
   id="opponent_view_attack_underline"
   offsetXY="0 0"
   rotation="0 0 180"
   scale="1.5 1.5"
   fontStyle="Bold"
   fontSize="72"
   color="#FFFFFF"
></Text>
<Text
   id="opponent_view_attack"
   offsetXY="0 0"
   rotation="0 0 180"
   scale="1.5 1.5"
   fontStyle="Bold"
   fontSize="72"
   color="#FFFFFF"
>0</Text>
</Panel>
]]
--END characterGUIXMLScript



--------------------------------------------------------------------------------
-- Bot GUI Local Script
--------------------------------------------------------------------------------
botGUILuaScript = [[
function onload()
  -- Load inside the script since global images do not work for players who join late.
  local resourceAssets = {
    {
      name = "card_minus_button",
      url = "http://cloud-3.steamusercontent.com/ugc/932693183049785038/A3CE1312007B6D4BCDEB2D84F9EB5B498D122C4B/"
    },
    {
      name = "card_plus_button",
      url = "http://cloud-3.steamusercontent.com/ugc/932693183049785426/CD098AC296A5D9124CB9A7F7526BEF7D91881249/"
    },
    {
      name = "card_damage",
      url = "http://cloud-3.steamusercontent.com/ugc/956344776549757288/5C67E20F331474C1BE71333F15C28C6A67B5D821/"
    }
  }
  self.UI.setCustomAssets(resourceAssets)

  self.UI.setXml(Global.getVar("characterGUIXMLScript"))

  -- The XML buttons do nothing and are implemented by hidden classic buttons, since GUI XML buttons can be triggered by middle/right click with no way to differentiate.
  self.createButton({
    click_function="damageMinus", function_owner=self,
    position={-1.490, 1.060, -4.5}, width=430, height=430, font_size=72, color={0,0,0,0}
  })
  self.createButton({
    click_function="damagePlus", function_owner=self,
    position={ 0.855, 1.060, -4.5}, width=430, height=430, font_size=72, color={0,0,0,0}
  })

  self.locked = true
  self.interactable = false
end

function damageMinus(buttonObject, playerColor, altClick)
  if ((playerColor == owner) and (altClick == false)) then
    if (damage > 0) then
      damage = (damage - 1)
      self.UI.setAttribute("damage", "text", damage)
      self.UI.setAttribute("opponent_view_damage", "text", damage)

      if ((damage == 6) or (damage == 9)) then
        self.UI.setAttribute("damage_underline", "text", "_")
        self.UI.setAttribute("opponent_view_damage_underline", "text", "_")
      else
        self.UI.setAttribute("damage_underline", "text", "")
        self.UI.setAttribute("opponent_view_damage_underline", "text", "")
      end
    end
  end
end

function damagePlus(buttonObject, playerColor, altClick)
  if ((playerColor == owner) and (altClick == false)) then
    damage = (damage + 1)
    self.UI.setAttribute("damage", "text", damage)
    self.UI.setAttribute("opponent_view_damage", "text", damage)

    if ((damage == 6) or (damage == 9)) then
      self.UI.setAttribute("damage_underline", "text", "_")
      self.UI.setAttribute("opponent_view_damage_underline", "text", "_")
    else
      self.UI.setAttribute("damage_underline", "text", "")
      self.UI.setAttribute("opponent_view_damage_underline", "text", "")
    end
  end
end
]]
-- END botGUILuaScript

characterGUIXMLScript = [[
<Panel
   id="card_gui"
   active="false"
   position="0 200 -108"
   rotation="0 0 180"
   rectAlignment="MiddleCenter"
   width="128"
   height="128"
   raycastTarget="false"
>
<Button
   offsetXY="-150 650"
   width="80"
   height="80"
   image="card_minus_button"
   raycastTarget="false"
></Button>
<Text
   id="damage_underline"
   offsetXY="-30 650"
   scale="1.5 1.5"
   fontStyle="Bold"
   fontSize="72"
   color="#FFFFFF"
></Text>
<Text
   id="damage"
   offsetXY="-30 650"
   scale="1.5 1.5"
   fontStyle="Bold"
   fontSize="72"
   color="#FFFFFF"
>0</Text>
<Button
   offsetXY="85 650"
   width="80"
   height="80"
   image="card_plus_button"
   raycastTarget="false"
></Button>
<Image
   offsetXY="180 650"
   width="100"
   height="100"
   image="card_damage"
   raycastTarget="false"
></Image>
</Panel>

<Panel
   id="opponent_card_gui"
   active="false"
   position="0 200 -108"
   rotation="0 0 180"
   rectAlignment="MiddleCenter"
   width="128"
   height="128"
   raycastTarget="false"
>
<Text
   id="opponent_view_damage_underline"
   offsetXY="-30 650"
   rotation="0 0 180"
   scale="1.5 1.5"
   fontStyle="Bold"
   fontSize="72"
   color="#FFFFFF"
></Text>
<Text
   id="opponent_view_damage"
   offsetXY="-30 650"
   rotation="0 0 180"
   scale="1.5 1.5"
   fontStyle="Bold"
   fontSize="72"
   color="#FFFFFF"
>0</Text>
<Image
   offsetXY="75 650"
   rotation="0 0 180"
   width="100"
   height="100"
   image="card_damage"
   raycastTarget="false"
></Image>
</Panel>
]]
--END characterGUIXMLScript

botsTable = {
  {  name = 'Arcee', cardsubname = 'Skilled Fighter', cost = '5', type = 'Character', rarity = 'RT', number = '01', set = 'T40'  },
  {  name = 'Autobot Cosmos', cardsubname = 'Recon & Communication', cost = '11', type = 'Character', rarity = 'RT', number = '02', set = 'T40'  },
  {  name = 'Autobot Hound', cardsubname = 'Long Range Scout', cost = '8', type = 'Character', rarity = 'CT', number = '03', set = 'T40'  },
  {  name = 'Autobot Jazz', cardsubname = 'Special Ops', cost = '6', type = 'Character', rarity = 'UT', number = '04', set = 'T40'  },
  {  name = 'Autobot Mirage', cardsubname = 'Lone Wolf', cost = '9', type = 'Character', rarity = 'UT', number = '05', set = 'T40'  },
  {  name = 'Barrage', cardsubname = 'Merciless Insecticon', cost = '7', type = 'Character', rarity = 'CT', number = '06', set = 'T40'  },
  {  name = 'Bombshell', cardsubname = 'Insecticon Mind-Controller', cost = '8', type = 'Character', rarity = 'CT', number = '07', set = 'T40'  },
  {  name = 'Bumblebee', cardsubname = 'Courageous Scout', cost = '9', type = 'Character', rarity = 'CT', number = '08', set = 'T40'  },
  {  name = 'Bumblebee', cardsubname = 'Legendary Warrior', cost = '10', type = 'Character', rarity = 'SRT', number = '09', set = 'T40'  },
  {  name = 'Chop Shop', cardsubname = 'Sneaky Insecticon', cost = '6', type = 'Character', rarity = 'UT', number = '10', set = 'T40'  },
  {  name = 'Chromia', cardsubname = 'Special Ops', cost = '8', type = 'Character', rarity = 'RT', number = '11', set = 'T40'  },
  {  name = 'Darkmount', cardsubname = 'Cruel Overlord', cost = '9', type = 'Character', rarity = 'RT', number = '12', set = 'T40'  },
  {  name = 'Deadlock', cardsubname = 'Bounty Hunter', cost = '8', type = 'Character', rarity = 'UT', number = '13', set = 'T40'  },
  {  name = 'Decepticon Shockwave', cardsubname = 'Cybertron Commander', cost = '11', type = 'Character', rarity = 'RT', number = '14', set = 'T40'  },
  {  name = 'Demolisher', cardsubname = 'Devoted Decepticon', cost = '6', type = 'Character', rarity = 'UT', number = '15', set = 'T40'  },
  {  name = 'Dinobot Sludge', cardsubname = 'Mighty Stomper', cost = '8', type = 'Character', rarity = 'UT', number = '16', set = 'T40'  },
  {  name = 'Dinobot Slug', cardsubname = 'Hot-Header Warrior', cost = '9', type = 'Character', rarity = 'CT', number = '17', set = 'T40'  },
  {  name = 'Dinobot Snarl', cardsubname = 'Desert Warrior', cost = '7', type = 'Character', rarity = 'UT', number = '18', set = 'T40'  },
  {  name = 'Dinobot Swoop', cardsubname = 'Fearsome Flyer', cost = '6', type = 'Character', rarity = 'CT', number = '19', set = 'T40'  },
  {  name = 'Flamewar', cardsubname = 'Veteran Decepticon', cost = '5', type = 'Character', rarity = 'CT', number = '20', set = 'T40'  },
  {  name = 'Grimlock', cardsubname = 'Dinobot Leader', cost = '10', type = 'Character', rarity = 'RT', number = '21', set = 'T40'  },
  {  name = 'Inferno', cardsubname = 'Fearless Firefighter', cost = '12', type = 'Character', rarity = 'UT', number = '22', set = 'T40'  },
  {  name = 'Insecticon Skrapnet', cardsubname = 'Insecticon Leader', cost = '7', type = 'Character', rarity = 'RT', number = '23', set = 'T40'  },
  {  name = 'Jetfire', cardsubname = 'Air Guardian', cost = '10', type = 'Character', rarity = 'UT', number = '24', set = 'T40'  },
  {  name = 'Kickback', cardsubname = 'Cunning Insecticon', cost = '5', type = 'Character', rarity = 'UT', number = '25', set = 'T40'  },
  {  name = 'Megatron', cardsubname = 'Decepticon Leader', cost = '10', type = 'Character', rarity = 'CT', number = '26', set = 'T40'  },
  {  name = 'Megatron', cardsubname = 'Living Weapon', cost = '13', type = 'Character', rarity = 'RT', number = '27', set = 'T40'  },
  {  name = 'Nemesis Prime', cardsubname = 'Dark Clone', cost = '12', type = 'Character', rarity = 'SRT', number = '28', set = 'T40'  },
  {  name = 'Optimus Prime', cardsubname = 'Battlefield Legend', cost = '13', type = 'Character', rarity = 'RT', number = '29', set = 'T40'  },
  {  name = 'Optimus Prime', cardsubname = 'Freedom Fighter', cost = '12', type = 'Character', rarity = 'CT', number = '30', set = 'T40'  },
  {  name = 'Prowl', cardsubname = 'Military Strategist', cost = '6', type = 'Character', rarity = 'UT', number = '31', set = 'T40'  },
  {  name = 'Ramjet', cardsubname = 'Sky Smasher', cost = '10', type = 'Character', rarity = 'CT', number = '32', set = 'T40'  },
  {  name = 'Ransack', cardsubname = 'Insecticon Commando', cost = '6', type = 'Character', rarity = 'UT', number = '33', set = 'T40'  },
  {  name = 'Sergeant Kup', cardsubname = 'Veteran Sergeant', cost = '7', type = 'Character', rarity = 'CT', number = '34', set = 'T40'  },
  {  name = 'Skywarp', cardsubname = 'Sneaky Prankster', cost = '6', type = 'Character', rarity = 'UT', number = '35', set = 'T40'  },
  {  name = 'Starscream', cardsubname = 'Air Commander', cost = '11', type = 'Character', rarity = 'UT', number = '36', set = 'T40'  },
  {  name = 'Starscream', cardsubname = 'Scheming Second-In-Command', cost = '10', type = 'Character', rarity = 'CT', number = '37', set = 'T40'  },
  {  name = 'Sunstorm', cardsubname = 'Fusion Flyer', cost = '11', type = 'Character', rarity = 'RT', number = '38', set = 'T40'  },
  {  name = 'Thundercracker', cardsubname = 'Mach Warrior', cost = '8', type = 'Character', rarity = 'UT', number = '39', set = 'T40'  },
  {  name = 'Wheeljack', cardsubname = 'Weapons Inventor', cost = '9', type = 'Character', rarity = 'UT', number = '40', set = 'T40'  },
  {  name = 'Bumblebee', cardsubname = 'Brave Warrior', cost = '6', type = 'Character', rarity = 'RT', number = 'T01', set = 'T04'  },
  {  name = 'Ironhide', cardsubname = 'Veteran Autobot', cost = '6', type = 'Character', rarity = 'RT', number = 'T02', set = 'T04'  },
  {  name = 'Optimus Prime', cardsubname = 'Autobot Leader', cost = '7', type = 'Character', rarity = 'RT', number = 'T03', set = 'T04'  },
  {  name = 'Red Alert', cardsubname = 'Security Chief', cost = '6', type = 'Character', rarity = 'RT', number = 'T04', set = 'T04'  },
  {  name = 'CliffJumper', cardsubname = 'Renegade Warrior', cost = '8', type = 'Character', rarity = 'SRT', number = 'T01', set = 'T02'  },
  {  name = 'Slipstream', cardsubname = 'Strategic Seeker', cost = '8', type = 'Character', rarity = 'SRT', number = 'T02', set = 'T02'  }
}

battleCardsTable = {
  { number = "U001", set = "081", name = "Aerial Recon", attack = "1", defense = "0", special = "0" },
  { number = "R002", set = "081", name = "Agility of Bumblebee", attack = "1", defense = "0", special = "0" },
  { number = "U003", set = "081", name = "Armed Hovercraft", attack = "0", defense = "1", special = "0" },
  { number = "C004", set = "081", name = "Armored Plating", attack = "0", defense = "1", special = "0" },
  { number = "U005", set = "081", name = "Backup Plan", attack = "0", defense = "0", special = "1" },
  { number = "C006", set = "081", name = "Battle Ready", attack = "1", defense = "0", special = "0" },
  { number = "U007", set = "081", name = "Blast Shield", attack = "0", defense = "1", special = "0" },
  { number = "U008", set = "081", name = "Body Armor", attack = "1", defense = "0", special = "0" },
  { number = "R009", set = "081", name = "Bombing Run", attack = "0", defense = "1", special = "0" },
  { number = "C010", set = "081", name = "Brainstorm", attack = "0", defense = "1", special = "0" },
  { number = "U011", set = "081", name = "Bug Bomb", attack = "0", defense = "1", special = "0" },
  { number = "R012", set = "081", name = "Cargo Trailer", attack = "0", defense = "1", special = "0" },
  { number = "U013", set = "081", name = "Collateral Damage", attack = "0", defense = "1", special = "0" },
  { number = "R014", set = "081", name = "Combat Training", attack = "0", defense = "0", special = "1" },
  { number = "U015", set = "081", name = "Computer Sabotage", attack = "1", defense = "0", special = "0" },
  { number = "C016", set = "081", name = "Crushing Size", attack = "0", defense = "0", special = "1" },
  { number = "U017", set = "081", name = "Crushing Treads", attack = "1", defense = "0", special = "0" },
  { number = "R018", set = "081", name = "Cybertonium Bow", attack = "0", defense = "1", special = "0" },
  { number = "R019", set = "081", name = "Data Bank", attack = "0", defense = "0", special = "1" },
  { number = "C020", set = "081", name = "Data Pad", attack = "0", defense = "0", special = "1" },
  { number = "U021", set = "081", name = "Debilitating Crystal", attack = "0", defense = "0", special = "1" },
  { number = "R022", set = "081", name = "Dino-Chomp!", attack = "0", defense = "1", special = "0" },
  { number = "U023", set = "081", name = "Disarm", attack = "0", defense = "1", special = "0" },
  { number = "U024", set = "081", name = "Disruption", attack = "1", defense = "0", special = "0" },
  { number = "R025", set = "081", name = "Disruptive Entrance", attack = "0", defense = "1", special = "0" },
  { number = "C026", set = "081", name = "Drill Arms", attack = "0", defense = "1", special = "0" },
  { number = "U027", set = "081", name = "Emergency Maintenance", attack = "1", defense = "0", special = "0" },
  { number = "R028", set = "081", name = "Energon Axe", attack = "0", defense = "1", special = "0" },
  { number = "U029", set = "081", name = "Equipment Enthusiast", attack = "0", defense = "0", special = "1" },
  { number = "C030", set = "081", name = "Flamethrower", attack = "1", defense = "0", special = "0" },
  { number = "C031", set = "081", name = "Force Field", attack = "0", defense = "0", special = "1" },
  { number = "R032", set = "081", name = "Fusion Cannon of Megatron", attack = "0", defense = "1", special = "0" },
  { number = "U033", set = "081", name = "Grenade Launcher", attack = "1", defense = "0", special = "0" },
  { number = "C034", set = "081", name = "Handheld Blaster", attack = "0", defense = "2", special = "0" },
  { number = "R035", set = "081", name = "Heroism", attack = "0", defense = "1", special = "0" },
  { number = "R036", set = "081", name = "Hunker Down", attack = "0", defense = "1", special = "0" },
  { number = "R037", set = "081", name = "I Still Function!", attack = "0", defense = "0", special = "0" },
  { number = "C038", set = "081", name = "Improvised Shield", attack = "2", defense = "0", special = "0" },
  { number = "C039", set = "081", name = "Incoming Transmission", attack = "1", defense = "0", special = "0" },
  { number = "C040", set = "081", name = "Inspiring Leadership", attack = "0", defense = "1", special = "0" },
  { number = "R041", set = "081", name = "Ion Blaster of Optimus Prime", attack = "0", defense = "1", special = "0" },
  { number = "R042", set = "081", name = "Jaws of Steel", attack = "1", defense = "0", special = "0" },
  { number = "U043", set = "081", name = "Leap Into Battle", attack = "0", defense = "1", special = "0" },
  { number = "R044", set = "081", name = "Matrix of Leadership", attack = "1", defense = "1", special = "0" },
  { number = "C045", set = "081", name = "Medic!", attack = "0", defense = "0", special = "0" },
  { number = "C046", set = "081", name = "Multi-Mission Gear", attack = "1", defense = "0", special = "0" },
  { number = "U047", set = "081", name = "Multi-Tool", attack = "0", defense = "1", special = "0" },
  { number = "U048", set = "081", name = "New Designs", attack = "1", defense = "0", special = "0" },
  { number = "C049", set = "081", name = "Null-Ray of Starscream", attack = "1", defense = "0", special = "0" },
  { number = "R050", set = "081", name = "One Shall Stand, One Shall Fall", attack = "0", defense = "0", special = "0" },
  { number = "R051", set = "081", name = "Peace through Tyranny", attack = "2", defense = "0", special = "0" },
  { number = "R052", set = "081", name = "Photon Bomb", attack = "0", defense = "0", special = "0" },
  { number = "R053", set = "081", name = "Piercing Blaster", attack = "0", defense = "0", special = "1" },
  { number = "C054", set = "081", name = "Plasma Burst", attack = "0", defense = "0", special = "0" },
  { number = "U055", set = "081", name = "Power Sword", attack = "0", defense = "1", special = "0" },
  { number = "C056", set = "081", name = "Primary Laser", attack = "0", defense = "1", special = "0" },
  { number = "C057", set = "081", name = "Ramming Speed", attack = "1", defense = "0", special = "0" },
  { number = "U058", set = "081", name = "Rapid Ascent", attack = "1", defense = "0", special = "0" },
  { number = "C059", set = "081", name = "Rapid Conversion", attack = "0", defense = "0", special = "1" },
  { number = "C060", set = "081", name = "Ready For Action", attack = "0", defense = "0", special = "0" },
  { number = "C061", set = "081", name = "Reinforced Plating", attack = "0", defense = "1", special = "0" },
  { number = "C062", set = "081", name = "Repair Bay", attack = "1", defense = "0", special = "0" },
  { number = "R063", set = "081", name = "Roll Out!", attack = "1", defense = "1", special = "0" },
  { number = "R064", set = "081", name = "Salvage for Parts", attack = "0", defense = "0", special = "0" },
  { number = "C065", set = "081", name = "Scrapper Gauntlets", attack = "1", defense = "0", special = "0" },
  { number = "R066", set = "081", name = "Security Checkpoint", attack = "0", defense = "2", special = "0" },
  { number = "R067", set = "081", name = "Shock Absorbers", attack = "1", defense = "0", special = "0" },
  { number = "R068", set = "081", name = "Start Your Engines", attack = "0", defense = "1", special = "0" },
  { number = "R069", set = "081", name = "Static Laser of Ironhide", attack = "0", defense = "0", special = "0" },
  { number = "U070", set = "081", name = "Strafing Run", attack = "1", defense = "0", special = "0" },
  { number = "C071", set = "081", name = "Supercharge", attack = "1", defense = "0", special = "0" },
  { number = "U072", set = "081", name = "Swap Missions", attack = "0", defense = "1", special = "0" },
  { number = "C073", set = "081", name = "Swap Parts", attack = "0", defense = "0", special = "1" },
  { number = "R074", set = "081", name = "Swarm!", attack = "1", defense = "0", special = "0" },
  { number = "R075", set = "081", name = "System Reboot", attack = "0", defense = "0", special = "1" },
  { number = "R076", set = "081", name = "Team-Up Tactics", attack = "0", defense = "1", special = "0" },
  { number = "R077", set = "081", name = "The Bigger They Are", attack = "0", defense = "1", special = "0" },
  { number = "R078", set = "081", name = "Thermal Weaponry", attack = "1", defense = "0", special = "0" },
  { number = "U079", set = "081", name = "Treasure Hunt", attack = "1", defense = "0", special = "0" },
  { number = "U080", set = "081", name = "Turbo Boosters", attack = "1", defense = "0", special = "0" },
  { number = "C081", set = "081", name = "Zap", attack = "1", defense = "0", special = "0" },
  { number = "R001", set = "002", name = "All-Out Attack", attack = "1", defense = "0", special = "0" },
  { number = "R002", set = "002", name = "Tandem Targeting System", attack = "1", defense = "0", special = "0" }
}
